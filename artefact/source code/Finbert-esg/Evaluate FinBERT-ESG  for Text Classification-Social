{"metadata":{"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":1192499,"sourceType":"datasetVersion","datasetId":622510},{"sourceId":4295,"sourceType":"modelInstanceVersion","modelInstanceId":3090}],"dockerImageVersionId":30558,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":true},"colab":{"provenance":[{"file_id":"1L3pPCd8ZvAUShey4YMi1iuO17HEwDM2Q","timestamp":1714337391262},{"file_id":"https://storage.googleapis.com/kaggle-colab-exported-notebooks/fine-tune-llama-2-for-sentiment-analysis-0b3bc634-17a8-440c-987c-ef532b3e1a94.ipynb?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=gcp-kaggle-com%40kaggle-161607.iam.gserviceaccount.com/20240428/auto/storage/goog4_request&X-Goog-Date=20240428T151907Z&X-Goog-Expires=259200&X-Goog-SignedHeaders=host&X-Goog-Signature=0d1c4f9d4ac1aa60c4b133a1b651c46b74cf0a71648ffe2c6619b6da7210df275f71da00e7481c1bd781a60e4ac90856230806cba8fa92fc8c0749bacf4014768ffa7ba7ff1e8e3c8a36debb6a63cd349871e75f0ac2aa4e700a72453284791707fc691d9c7d7f2cf59b74a4cf186fdd439d096a15ca89577a0c5384423c39d77ec60202c059f1cd32597cb9974953aa07b1f3230e8a6438044bbd1d694396c7c74e696906fbec420b91322e10764ae0b64d989753d67a381f589f8eadecc8b56a913a77efac2cc687720b68ea225c64f697fc1a2e6518d4296f142188faa3b35ea8ae62fcf2419f64fe12842bb8c125bdbc2dcd0216efa827509f3f2a125c3b","timestamp":1714317558194}],"machine_shape":"hm","gpuType":"L4"},"accelerator":"GPU","widgets":{"application/vnd.jupyter.widget-state+json":{"86bceebc724642fdb3c4a528df349d33":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_a2111333cb3b40a1821a434d9e85ad2a","IPY_MODEL_04be0e2e0c564b8c96a54b40c22e71d5","IPY_MODEL_2f29e8e7b440431fb26ab1a9e24b6ed5"],"layout":"IPY_MODEL_ce6c71662fe542c8971ff7afb7e2d7dc"}},"a2111333cb3b40a1821a434d9e85ad2a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_252fb06422d14770b53eb98d9e4dd947","placeholder":"​","style":"IPY_MODEL_f9fb2c9231bb4cfc9f12ccadd48ccc62","value":"config.json: 100%"}},"04be0e2e0c564b8c96a54b40c22e71d5":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_79a29abc150547e5a9f6340ebabad781","max":781,"min":0,"orientation":"horizontal","style":"IPY_MODEL_6c6a3aa66c514425be373db152b9ffab","value":781}},"2f29e8e7b440431fb26ab1a9e24b6ed5":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_89c97452dd0249b4a629ca0aaa83ce8e","placeholder":"​","style":"IPY_MODEL_5f67639be6194b3e925a49baff13ea55","value":" 781/781 [00:00&lt;00:00, 68.1kB/s]"}},"ce6c71662fe542c8971ff7afb7e2d7dc":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"252fb06422d14770b53eb98d9e4dd947":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f9fb2c9231bb4cfc9f12ccadd48ccc62":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"79a29abc150547e5a9f6340ebabad781":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6c6a3aa66c514425be373db152b9ffab":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"89c97452dd0249b4a629ca0aaa83ce8e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5f67639be6194b3e925a49baff13ea55":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"cec02e7e68a34ba29f596bbb3acc9216":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_3c73341782cd4c7691b084067e3ff7a4","IPY_MODEL_a0cd85fb0e0148d196281a81876a20bf","IPY_MODEL_88aa598240e34a97bf3ffa234c875b84"],"layout":"IPY_MODEL_9f5d60b4a9d646e28fe6eebe2f87275a"}},"3c73341782cd4c7691b084067e3ff7a4":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d150de202de1480f826ba595d0a50c48","placeholder":"​","style":"IPY_MODEL_03784080fd6f4bc1bf48d20fa4e84d31","value":"pytorch_model.bin: 100%"}},"a0cd85fb0e0148d196281a81876a20bf":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_0d7e8c01898d418b82c6b92e40fb1cc3","max":439107090,"min":0,"orientation":"horizontal","style":"IPY_MODEL_f1f8eec1a55e4faeb8c364295f316f9c","value":439107090}},"88aa598240e34a97bf3ffa234c875b84":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c8f9763ecdb94812ba842849f35e9760","placeholder":"​","style":"IPY_MODEL_030cdecb32554688852f97fdc9ea4806","value":" 439M/439M [00:02&lt;00:00, 191MB/s]"}},"9f5d60b4a9d646e28fe6eebe2f87275a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d150de202de1480f826ba595d0a50c48":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"03784080fd6f4bc1bf48d20fa4e84d31":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"0d7e8c01898d418b82c6b92e40fb1cc3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f1f8eec1a55e4faeb8c364295f316f9c":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"c8f9763ecdb94812ba842849f35e9760":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"030cdecb32554688852f97fdc9ea4806":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"60412776b9ce4194a0565a2bf9bda03f":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_282ffd7f301245ce8dde3c7e86db0ce1","IPY_MODEL_99436497a509436bab210dc01a29c192","IPY_MODEL_2634c818272f4e85b61ae17dfb125429"],"layout":"IPY_MODEL_bb6f9113ddae4a75b47289463c7992e4"}},"282ffd7f301245ce8dde3c7e86db0ce1":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_630a67312b7e4fdc99fc8d2efb391d65","placeholder":"​","style":"IPY_MODEL_10db8c5d400340b393c183943a9e96ca","value":"vocab.txt: 100%"}},"99436497a509436bab210dc01a29c192":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_b7efc26d7428435da0506c51ee07aab2","max":226122,"min":0,"orientation":"horizontal","style":"IPY_MODEL_be40fad6588c4f22892ca7a2e9de5746","value":226122}},"2634c818272f4e85b61ae17dfb125429":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_6836ee096e5942be8158cea380f0625e","placeholder":"​","style":"IPY_MODEL_2de91c44ddce4d96be2e9bbf6464e4ac","value":" 226k/226k [00:00&lt;00:00, 7.15MB/s]"}},"bb6f9113ddae4a75b47289463c7992e4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"630a67312b7e4fdc99fc8d2efb391d65":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"10db8c5d400340b393c183943a9e96ca":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"b7efc26d7428435da0506c51ee07aab2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"be40fad6588c4f22892ca7a2e9de5746":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"6836ee096e5942be8158cea380f0625e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2de91c44ddce4d96be2e9bbf6464e4ac":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"nbformat_minor":0,"nbformat":4,"cells":[{"cell_type":"markdown","source":["## Installations and imports"],"metadata":{"id":"UB8_ZM31SetP"}},{"cell_type":"code","source":["!pip install -q -U \"torch==2.1.2\""],"metadata":{"execution":{"iopub.status.busy":"2024-04-26T15:46:51.533318Z","iopub.execute_input":"2024-04-26T15:46:51.534112Z","iopub.status.idle":"2024-04-26T15:51:44.001564Z","shell.execute_reply.started":"2024-04-26T15:46:51.534058Z","shell.execute_reply":"2024-04-26T15:51:43.999504Z"},"trusted":true,"id":"5YeGTE9DSetP","executionInfo":{"status":"ok","timestamp":1714337606297,"user_tz":240,"elapsed":98956,"user":{"displayName":"Tin Yuet Chung","userId":"15907962182928072454"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"6bf9a31d-3bbc-4597-cef4-c40c15fb0393"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m209.8/209.8 MB\u001b[0m \u001b[31m3.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m89.2/89.2 MB\u001b[0m \u001b[31m18.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","torchaudio 2.2.1+cu121 requires torch==2.2.1, but you have torch 2.1.2 which is incompatible.\n","torchtext 0.17.1 requires torch==2.2.1, but you have torch 2.1.2 which is incompatible.\n","torchvision 0.17.1+cu121 requires torch==2.2.1, but you have torch 2.1.2 which is incompatible.\u001b[0m\u001b[31m\n","\u001b[0m"]}]},{"cell_type":"code","source":["!pip install -q -U \"transformers==4.36.2\" \"datasets==2.16.1\" \"accelerate==0.26.1\""],"metadata":{"execution":{"iopub.status.busy":"2024-04-26T16:04:55.495375Z","iopub.execute_input":"2024-04-26T16:04:55.496049Z","iopub.status.idle":"2024-04-26T16:07:25.513833Z","shell.execute_reply.started":"2024-04-26T16:04:55.49599Z","shell.execute_reply":"2024-04-26T16:07:25.512145Z"},"trusted":true,"id":"7zqMMe6RSetP","executionInfo":{"status":"ok","timestamp":1714337623562,"user_tz":240,"elapsed":17268,"user":{"displayName":"Tin Yuet Chung","userId":"15907962182928072454"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"e4f7b55b-7e33-431a-c710-cbdf04900126"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[?25l     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/134.8 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m134.8/134.8 kB\u001b[0m \u001b[31m4.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h"]}]},{"cell_type":"markdown","source":["The code imports the os module and sets two environment variables:\n","* CUDA_VISIBLE_DEVICES: This environment variable tells PyTorch which GPUs to use. In this case, the code is setting the environment variable to 0, which means that PyTorch will use the first GPU.\n","* TOKENIZERS_PARALLELISM: This environment variable tells the Hugging Face Transformers library whether to parallelize the tokenization process. In this case, the code is setting the environment variable to false, which means that the tokenization process will not be parallelized."],"metadata":{"id":"WlDeAXzNSetQ"}},{"cell_type":"code","source":["import os\n","os.environ[\"CUDA_VISIBLE_DEVICES\"] = \"0\"\n","os.environ[\"TOKENIZERS_PARALLELISM\"] = \"false\""],"metadata":{"execution":{"iopub.status.busy":"2024-02-19T15:22:32.894556Z","iopub.execute_input":"2024-02-19T15:22:32.894943Z","iopub.status.idle":"2024-02-19T15:22:32.900259Z","shell.execute_reply.started":"2024-02-19T15:22:32.894904Z","shell.execute_reply":"2024-02-19T15:22:32.899115Z"},"trusted":true,"id":"5FqZqYjRSetQ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["The code import warnings; warnings.filterwarnings(\"ignore\") imports the warnings module and sets the warning filter to ignore. This means that all warnings will be suppressed and will not be displayed. Actually during training there are many warnings that do not prevent the fine-tuning but can be distracting and make you wonder if you are doing the correct things."],"metadata":{"id":"7MDuK4_8SetQ"}},{"cell_type":"code","source":["import warnings\n","warnings.filterwarnings(\"ignore\")"],"metadata":{"execution":{"iopub.status.busy":"2024-02-19T15:22:32.901507Z","iopub.execute_input":"2024-02-19T15:22:32.90177Z","iopub.status.idle":"2024-02-19T15:22:32.914498Z","shell.execute_reply.started":"2024-02-19T15:22:32.901747Z","shell.execute_reply":"2024-02-19T15:22:32.913622Z"},"trusted":true,"id":"4vEGNQQOSetQ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["In the following cell there are all the other imports for running the notebook"],"metadata":{"id":"e5tzXAWtSetQ"}},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import os\n","from tqdm import tqdm\n","import torch\n","import torch.nn as nn\n","import transformers\n","from datasets import Dataset\n","from transformers import (AutoModelForCausalLM,\n","                          AutoTokenizer,\n","                          BitsAndBytesConfig,\n","                          TrainingArguments,\n","                          pipeline,\n","                          logging,\n","                          BertTokenizer,\n","                          BertForSequenceClassification\n","                          )\n","from sklearn.metrics import (accuracy_score,\n","                             classification_report,\n","                             confusion_matrix)\n","from sklearn.model_selection import train_test_split"],"metadata":{"papermill":{"duration":14.485002,"end_time":"2023-10-16T11:00:18.917449","exception":false,"start_time":"2023-10-16T11:00:04.432447","status":"completed"},"tags":[],"execution":{"iopub.status.busy":"2024-02-19T15:22:32.915638Z","iopub.execute_input":"2024-02-19T15:22:32.915866Z","iopub.status.idle":"2024-02-19T15:22:48.260443Z","shell.execute_reply.started":"2024-02-19T15:22:32.915846Z","shell.execute_reply":"2024-02-19T15:22:48.259636Z"},"trusted":true,"id":"I8rxnQuGSetR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# standard libraries\n","import matplotlib.pyplot as plt\n","from sklearn.metrics import ConfusionMatrixDisplay"],"metadata":{"id":"jFFZaFgzbpVn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(f\"pytorch version {torch.__version__}\")"],"metadata":{"execution":{"iopub.status.busy":"2024-02-19T15:22:48.261986Z","iopub.execute_input":"2024-02-19T15:22:48.262366Z","iopub.status.idle":"2024-02-19T15:22:48.267436Z","shell.execute_reply.started":"2024-02-19T15:22:48.26233Z","shell.execute_reply":"2024-02-19T15:22:48.266395Z"},"trusted":true,"id":"3_jb0ZrUSetR","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714337631856,"user_tz":240,"elapsed":18,"user":{"displayName":"Tin Yuet Chung","userId":"15907962182928072454"}},"outputId":"5aa77785-e857-4eac-fa82-3b4090b4bd38"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["pytorch version 2.1.2+cu121\n"]}]},{"cell_type":"code","source":["device = torch.device(\"cuda:0\" if torch.cuda.is_available() else \"cpu\")\n","print(f\"working on {device}\")"],"metadata":{"execution":{"iopub.status.busy":"2024-02-19T15:22:48.268538Z","iopub.execute_input":"2024-02-19T15:22:48.26905Z","iopub.status.idle":"2024-02-19T15:22:48.284682Z","shell.execute_reply.started":"2024-02-19T15:22:48.268983Z","shell.execute_reply":"2024-02-19T15:22:48.283708Z"},"trusted":true,"id":"cydwCB0-SetR","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1714337631856,"user_tz":240,"elapsed":15,"user":{"displayName":"Tin Yuet Chung","userId":"15907962182928072454"}},"outputId":"4f7005b2-220a-44f1-8cb9-ea57282b146f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["working on cuda:0\n"]}]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZmSErehrS7re","executionInfo":{"status":"ok","timestamp":1714337749630,"user_tz":240,"elapsed":117787,"user":{"displayName":"Tin Yuet Chung","userId":"15907962182928072454"}},"outputId":"bced318c-4124-4f75-f4db-11fee3c6210c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","source":["## Preparing the data and the core evaluation functions"],"metadata":{"id":"U4-qApSpSetR"}},{"cell_type":"markdown","source":["The code in the next cell performs the following steps:\n","\n","1. Reads the input dataset from the s_2k.csv file, which is a comma-separated value (CSV) file with two columns: label and text.\n","2. Splits the dataset into training and test sets, with 250 samples in each set. The split is stratified by label, so that each set contains a representative sample of positive, neutral, and negative labels.\n","3. Shuffles the train data in a replicable order (random_state=10)\n","4. Transforms the texts contained in the train and test data into prompts to be used by Llama: the train prompts contains the expected answer we want to fine-tune the model with\n","5. The residual examples not in train or test, for reporting purposes during training (but it won't be used for early stopping), is treated as evaluation data, which is sampled with repetition in order to have a 50/50/50 sample (negative instances are very few, hence they should be repeated)\n","5. The train and eval data are wrapped by the class from Hugging Face (https://huggingface.co/docs/datasets/index)\n","\n","This prepares in a single cell train_data, eval_data and test_data datasets to be used in our fine tuning."],"metadata":{"id":"8fi5OMpiSetR"}},{"cell_type":"code","source":["filename = \"/content/drive/My Drive/Datasets/s_2k.csv\"\n","\n","df = pd.read_csv(filename,\n","                 encoding=\"utf-8\", encoding_errors=\"replace\")\n","# replace values\n","df.replace({'Not Social': 'negative', 'Social': 'positive'}, inplace=True)\n"],"metadata":{"id":"wRGvCIvYTA69"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train = list()\n","X_test = list()\n","for label in [\"positive\", \"negative\"]:\n","    train, test  = train_test_split(df[df.label==label],\n","                                    train_size=250,\n","                                    test_size=250,\n","                                    random_state=42)\n","    X_train.append(train)\n","    X_test.append(test)\n","\n","X_train = pd.concat(X_train).sample(frac=1, random_state=10)\n","X_test = pd.concat(X_test)\n","\n","eval_idx = [idx for idx in df.index if idx not in list(X_train.index) + list(X_test.index)]\n","X_eval = df[df.index.isin(eval_idx)]\n","X_eval = (X_eval\n","          .groupby('label', group_keys=False)\n","          .apply(lambda x: x.sample(n=50, random_state=10, replace=True)))\n","X_train = X_train.reset_index(drop=True)\n","\n","y_true = X_test.label\n","\n","train_data = Dataset.from_pandas(X_train)\n","eval_data = Dataset.from_pandas(X_eval)"],"metadata":{"execution":{"iopub.status.busy":"2024-02-19T15:22:48.28578Z","iopub.execute_input":"2024-02-19T15:22:48.286089Z","iopub.status.idle":"2024-02-19T15:22:48.802257Z","shell.execute_reply.started":"2024-02-19T15:22:48.286056Z","shell.execute_reply":"2024-02-19T15:22:48.80152Z"},"trusted":true,"id":"MKzrGSR0SetR"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Testing the model without fine-tuning"],"metadata":{"id":"66yPJ9CrSetS"}},{"cell_type":"code","source":["!huggingface-cli login"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zSJ21qeQT1tS","executionInfo":{"status":"ok","timestamp":1714337767196,"user_tz":240,"elapsed":16346,"user":{"displayName":"Tin Yuet Chung","userId":"15907962182928072454"}},"outputId":"963686d3-7ba0-4e3f-c577-527f4f9957e3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","    _|    _|  _|    _|    _|_|_|    _|_|_|  _|_|_|  _|      _|    _|_|_|      _|_|_|_|    _|_|      _|_|_|  _|_|_|_|\n","    _|    _|  _|    _|  _|        _|          _|    _|_|    _|  _|            _|        _|    _|  _|        _|\n","    _|_|_|_|  _|    _|  _|  _|_|  _|  _|_|    _|    _|  _|  _|  _|  _|_|      _|_|_|    _|_|_|_|  _|        _|_|_|\n","    _|    _|  _|    _|  _|    _|  _|    _|    _|    _|    _|_|  _|    _|      _|        _|    _|  _|        _|\n","    _|    _|    _|_|      _|_|_|    _|_|_|  _|_|_|  _|      _|    _|_|_|      _|        _|    _|    _|_|_|  _|_|_|_|\n","\n","    To login, `huggingface_hub` requires a token generated from https://huggingface.co/settings/tokens .\n","Token: \n","Add token as git credential? (Y/n) Y\n","Token is valid (permission: write).\n","\u001b[1m\u001b[31mCannot authenticate through git-credential as no helper is defined on your machine.\n","You might have to re-authenticate when pushing to the Hugging Face Hub.\n","Run the following command in your terminal in case you want to set the 'store' credential helper as default.\n","\n","git config --global credential.helper store\n","\n","Read https://git-scm.com/book/en/v2/Git-Tools-Credential-Storage for more details.\u001b[0m\n","Token has not been saved to git credential helper.\n","Your token has been saved to /root/.cache/huggingface/token\n","Login successful\n"]}]},{"cell_type":"code","source":["# Load model from Hugging Face Hub with model name and bitsandbytes configuration\n","\n","model = BertForSequenceClassification.from_pretrained('yiyanghkust/finbert-esg',num_labels=4)\n","tokenizer = BertTokenizer.from_pretrained('yiyanghkust/finbert-esg')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":113,"referenced_widgets":["86bceebc724642fdb3c4a528df349d33","a2111333cb3b40a1821a434d9e85ad2a","04be0e2e0c564b8c96a54b40c22e71d5","2f29e8e7b440431fb26ab1a9e24b6ed5","ce6c71662fe542c8971ff7afb7e2d7dc","252fb06422d14770b53eb98d9e4dd947","f9fb2c9231bb4cfc9f12ccadd48ccc62","79a29abc150547e5a9f6340ebabad781","6c6a3aa66c514425be373db152b9ffab","89c97452dd0249b4a629ca0aaa83ce8e","5f67639be6194b3e925a49baff13ea55","cec02e7e68a34ba29f596bbb3acc9216","3c73341782cd4c7691b084067e3ff7a4","a0cd85fb0e0148d196281a81876a20bf","88aa598240e34a97bf3ffa234c875b84","9f5d60b4a9d646e28fe6eebe2f87275a","d150de202de1480f826ba595d0a50c48","03784080fd6f4bc1bf48d20fa4e84d31","0d7e8c01898d418b82c6b92e40fb1cc3","f1f8eec1a55e4faeb8c364295f316f9c","c8f9763ecdb94812ba842849f35e9760","030cdecb32554688852f97fdc9ea4806","60412776b9ce4194a0565a2bf9bda03f","282ffd7f301245ce8dde3c7e86db0ce1","99436497a509436bab210dc01a29c192","2634c818272f4e85b61ae17dfb125429","bb6f9113ddae4a75b47289463c7992e4","630a67312b7e4fdc99fc8d2efb391d65","10db8c5d400340b393c183943a9e96ca","b7efc26d7428435da0506c51ee07aab2","be40fad6588c4f22892ca7a2e9de5746","6836ee096e5942be8158cea380f0625e","2de91c44ddce4d96be2e9bbf6464e4ac"]},"id":"04VHpjA1UCzA","executionInfo":{"status":"ok","timestamp":1714337772331,"user_tz":240,"elapsed":5139,"user":{"displayName":"Tin Yuet Chung","userId":"15907962182928072454"}},"outputId":"70e15c86-9394-4b52-8882-3bfcd3150233"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["config.json:   0%|          | 0.00/781 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"86bceebc724642fdb3c4a528df349d33"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["pytorch_model.bin:   0%|          | 0.00/439M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"cec02e7e68a34ba29f596bbb3acc9216"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["vocab.txt:   0%|          | 0.00/226k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"60412776b9ce4194a0565a2bf9bda03f"}},"metadata":{}}]},{"cell_type":"code","source":["# test\n","pipe = pipeline(\"text-classification\", model=model, tokenizer=tokenizer)\n","results = pipe('Rhonda has been volunteering for several years for a variety of charitable community programs.')"],"metadata":{"id":"DBM1YbDOXxMB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["results"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lCs8RNREX50P","executionInfo":{"status":"ok","timestamp":1714337772332,"user_tz":240,"elapsed":8,"user":{"displayName":"Tin Yuet Chung","userId":"15907962182928072454"}},"outputId":"bf99b552-fc51-43cd-9f3b-ba61be4a5fbe"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[{'label': 'Social', 'score': 0.9906041026115417}]"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["At this point, we are ready to test the Llama 2 7b-hf model and see how it performs on our problem without any fine-tuning. This allows us to get insights on the model itself and establish a baseline."],"metadata":{"id":"E7kg_vmmSetS"}},{"cell_type":"code","source":["def label_to_num(inp):\n","    if inp == 'Social':\n","        return 1\n","    else:\n","        return 0"],"metadata":{"id":"M3Ez8HZ8bGfS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Predict\n","text = X_test[\"text\"].to_numpy().astype(str)\n","pipe = pipeline(\"text-classification\", model=model, tokenizer=tokenizer)\n","# pred = useTransformer(text, pipe)"],"metadata":{"id":"P-cLWSqyadrp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Helper for the use of the transformer\n","def useTransformer(arr, classifier):\n","  arr_2 = classifier([x for x in arr])\n","  res = [label_to_num(x['label']) for x in arr_2]\n","  return res\n","\n","pred = useTransformer(text, pipe)"],"metadata":{"id":"OLLUyP8hZqnO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["labels = y_true.to_numpy()"],"metadata":{"id":"8QgU8Gz4cHOJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Create a dictionary mapping strings to integers\n","mapping = {'positive': 1, 'negative': 0}\n","# Use the dictionary to map strings to integers\n","labels = np.vectorize(mapping.get)(labels)"],"metadata":{"id":"Prd0AGLedKVs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Helper to show output\n","def evaluate(labels, pred, name):\n","  print(\"Evaluation of \" + name)\n","  print(classification_report(labels, pred))\n","  confMat = confusion_matrix(labels, pred)\n","  disp = ConfusionMatrixDisplay(confusion_matrix=confMat, display_labels=[\"no\", \"yes\"])\n","  disp.plot()\n","  plt.show()"],"metadata":{"id":"K5PmppUZbdFe"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["evaluate(labels, pred, 'FinBert-ESG on S')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":623},"id":"AfXBBriCb7J9","executionInfo":{"status":"ok","timestamp":1714337807663,"user_tz":240,"elapsed":360,"user":{"displayName":"Tin Yuet Chung","userId":"15907962182928072454"}},"outputId":"30997d13-bfec-4cd4-f15d-1c774f1dd3af"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Evaluation of FinBert-ESG on S\n","              precision    recall  f1-score   support\n","\n","           0       0.71      0.78      0.75       250\n","           1       0.76      0.68      0.72       250\n","\n","    accuracy                           0.73       500\n","   macro avg       0.74      0.73      0.73       500\n","weighted avg       0.74      0.73      0.73       500\n","\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]}]}